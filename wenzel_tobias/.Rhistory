arab.toTenwords.c <- names(sorted.arab.rel.freqs.t [1:10])
startline.c <- "# البحر : متقارب تام 1"
endline.c <- "# % مضى ثلاث سنين منذ حل بها % % و عام حلت وهذا التابع الخامي % %"
arab.lines.v <- f.getNovelLines("arabicCorpus/up0600AH/0001HarithIbnHilliza.Diwan.JK007504-ara1", startline.c, endline.c)
arab.word.v <- f.sepWords(arab.lines.v)
# ^ meaning it starts with...
arab.word.v <- arab.word.v[grep("[^a-zA-Z0-9]",arab.word.v)] # no numbers and page-count (letters)
sorted.arab.freqs.t <- f.getFreqTable(arab.word.v)
sorted.arab.rel.freqs.t <- 100*(sorted.arab.freqs.t/sum(sorted.arab.freqs.t))
plot(sorted.arab.rel.freqs.t[1:10], type="b",
xlab="Top Ten Words", ylab="Percentage of Full Text (arab)", xaxt ="n")
axis(1,1:10, labels=names(sorted.arab.rel.freqs.t [1:10]))
arab.toTenwords.c <- names(sorted.arab.rel.freqs.t [1:10])
sorted.arab.rel.freqs.t <- 100*(sorted.arab.freqs.t/sum(sorted.arab.freqs.t))
sorted.arab.freqs.t <- f.getFreqTable(arab.word.v)
f.getMetaData <- function(pathToText.c, firstline.c, lastline.c){
start.metadata.v <- text.v[1:start.v -1] # everything before the novel starts
end.metadata.v <- text.v[(end.v+1):length(text.v)] # everything after the novel
metadata.v <- c(start.metadata.v, end.metadata.v) # combine both in one variable
}
# Get the Novel-Part of the Book. Specify the path to the text, first and last line of the novel.
f.getNovelLines <- function(pathToText.c,firstline.c, lastline.c){
text.v <- scan(pathToText.c, what="character", sep="\n")
return(text.v[ which(text.v == firstline.c):which(text.v == lastline.c) ]) # and save the novel in novel.lines.v
}
# Seperate Words of a given Text (Vector)
f.sepWords <- function(novel.lines.v){
novel.v <- paste(novel.lines.v, collapse=" ")
novel.lower.v <- tolower(novel.v)  # convert to lowercase
novel.words.l <- strsplit(novel.lower.v, "\\W") # splitting into words
novel.word.v <- unlist(novel.words.l) # simplify to vector
not.blanks.v <-  which(novel.word.v!="") # vector with all places where it's not blank
return(novel.word.v[not.blanks.v]) # "deleting the blanks"
}
# Get a frequency-table of a given text (Vetor)
f.getFreqTable <- function(novel.word.v) {
novel.freqs.t <- table(novel.word.v) # frequency-table
sorted.moby.freqs.t <- sort(novel.freqs.t , decreasing=TRUE)
return(sorted.moby.freqs.t)
}
startline.c <- "# البحر : متقارب تام 1"
endline.c <- "# % مضى ثلاث سنين منذ حل بها % % و عام حلت وهذا التابع الخامي % %"
arab.lines.v <- f.getNovelLines("arabicCorpus/up0600AH/0001HarithIbnHilliza.Diwan.JK007504-ara1", startline.c, endline.c)
arab.word.v <- f.sepWords(arab.lines.v)
# ^ meaning it starts with...
arab.word.v <- arab.word.v[grep("[^a-zA-Z0-9]",arab.word.v)] # no numbers and page-count (letters)
sorted.arab.freqs.t <- f.getFreqTable(arab.word.v)
sorted.arab.rel.freqs.t <- 100*(sorted.arab.freqs.t/sum(sorted.arab.freqs.t))
plot(sorted.arab.rel.freqs.t[1:10], type="b",
xlab="Top Ten Words", ylab="Percentage of Full Text (arab)", xaxt ="n")
axis(1,1:10, labels=names(sorted.arab.rel.freqs.t [1:10]))
arab.toTenwords.c <- names(sorted.arab.rel.freqs.t [1:10])
sorted.arab.freqs.t <- f.getFreqTable(arab.word.v)
setwd("~/Dokumente/islamicate2.0/hw/wenzel_tobias/") # setting working directory
arab.lines.v <- f.getNovelLines("arabicCorpus/up0600AH/0001HarithIbnHilliza.Diwan.JK007504-ara1", startline.c, endline.c)
arab.word.v <- f.sepWords(arab.lines.v)
# ^ meaning it starts with...
arab.word.v <- arab.word.v[grep("[^a-zA-Z0-9]",arab.word.v)] # no numbers and page-count (letters)
sorted.arab.freqs.t <- f.getFreqTable(arab.word.v)
sorted.arab.rel.freqs.t <- 100*(sorted.arab.freqs.t/sum(sorted.arab.freqs.t))
plot(sorted.arab.rel.freqs.t[1:10], type="b",
xlab="Top Ten Words", ylab="Percentage of Full Text (arab)", xaxt ="n")
axis(1,1:10, labels=names(sorted.arab.rel.freqs.t [1:10]))
arab.toTenwords.c <- names(sorted.arab.rel.freqs.t [1:10])
arab.toTenwords.c
startline.c <- "# البحر : طويل 11"
endline.c <- "# % نذر الأبطال صرعى بينها % % تعكف العقبان فيها والرخم % PageV01P062"
arab02.lines.v <- f.getNovelLines("arabicCorpus/up0600AH/0001TarafaIbnCabd.Diwan.JK007518-ara1", startline.c, endline.c)
arab02.lines.v <- f.getNovelLines("arabicCorpus/up0600AH/0001TarafaIbnCabd.Diwan.JK007518-ara1", startline.c, endline.c)
startline.c <- "# البحر : طويل 11"
endline.c <- "# % نذر الأبطال صرعى بينها % % تعكف العقبان فيها والرخم % PageV01P062"
arab02.lines.v <- f.getNovelLines("arabicCorpus/up0600AH/0001TarafaIbnCabd.Diwan.JK007518-ara1", startline.c, endline.c)
startline.c
endline.c
startline.c <- "# جزء فيه أحاديث الليث PageV01P001"
endline.c <- "~~أبغضتكم PageV01P056"
startline.c
endline.c
arab02.lines.v <- f.getNovelLines("arabicCorpus/up0600AH/0175LaythIbnSacd.MajlisMinFawaid.JK000863-ara1", startline.c, endline.c)
arab02.word.v <- f.sepWords(arab02.lines.v)
arab02.word.v <- arab02.word.v[grep("[^a-zA-Z0-9]",arab02.word.v)]
sorted.arab02.freqs.t <- f.getFreqTable(arab02.word.v)
sorted.arab01.rel.freqs.t <- 100*(sorted.arab01.freqs.t/sum(sorted.arab01.freqs.t))
arab02.toTenwords.c <- names(sorted.arab02.rel.freqs.t [1:10])
arab02.toTenwords.c <- names(sorted.arab02.rel.freqs.t [1:10])
sorted.arab02.rel.freqs.t <- 100*(sorted.arab01.freqs.t/sum(sorted.arab01.freqs.t))
arab02.word.v <- f.sepWords(arab02.lines.v)
arab02.word.v <- arab02.word.v[grep("[^a-zA-Z0-9]",arab02.word.v)]
sorted.arab02.freqs.t <- f.getFreqTable(arab02.word.v)
sorted.arab02.rel.freqs.t <- 100*(sorted.arab01.freqs.t/sum(sorted.arab01.freqs.t))
arab01.toTenwords.c <- names(sorted.arab01.rel.freqs.t [1:10])
sorted.arab02.rel.freqs.t <- 100*(sorted.arab02.freqs.t/sum(sorted.arab02.freqs.t))
arab02.toTenwords.c <- names(sorted.arab02.rel.freqs.t [1:10])
startline.c <- "# البحر : متقارب تام 1"
endline.c <- "# % مضى ثلاث سنين منذ حل بها % % و عام حلت وهذا التابع الخامي % %"
arab01.lines.v <- f.getNovelLines("arabicCorpus/up0600AH/0001HarithIbnHilliza.Diwan.JK007504-ara1", startline.c, endline.c)
arab01.word.v <- f.sepWords(arab01.lines.v)
# ^ meaning it starts with...
arab01.word.v <- arab01.word.v[grep("[^a-zA-Z0-9]",arab01.word.v)] # no numbers and page-count (letters)
sorted.arab01.freqs.t <- f.getFreqTable(arab01.word.v)
sorted.arab01.rel.freqs.t <- 100*(sorted.arab01.freqs.t/sum(sorted.arab01.freqs.t))
# yet another arabic book, which i will use to compare against the first.
startline.c <- "# جزء فيه أحاديث الليث PageV01P001"
endline.c <- "~~أبغضتكم PageV01P056"
arab02.lines.v <- f.getNovelLines("arabicCorpus/up0600AH/0175LaythIbnSacd.MajlisMinFawaid.JK000863-ara1", startline.c, endline.c)
arab02.word.v <- f.sepWords(arab02.lines.v)
arab02.word.v <- arab02.word.v[grep("[^a-zA-Z0-9]",arab02.word.v)]
sorted.arab02.freqs.t <- f.getFreqTable(arab02.word.v)
sorted.arab02.rel.freqs.t <- 100*(sorted.arab02.freqs.t/sum(sorted.arab02.freqs.t))
arab01.toTenwords.c <- names(sorted.arab01.rel.freqs.t [1:10])
arab02.toTenwords.c <- names(sorted.arab02.rel.freqs.t [1:10])
################  EXERCISE 3.2   ################
# all unique words in the top ten list of both books
unique(c(arab01.toTenwords.c,arab02.toTenwords.c))
sorted.arab02.freqs.t[which(arab01.toTenwords.c %in% arab02.toTenwords.c)]
sorted.arab02.freqs.t[which(arab02.toTenwords.c %in% arab01.toTenwords.c)]
sorted.arab02.freqs.t[which(!(sorted.arab02.freqs.t %in% sorted.arab01.freqs.t))]
plot(sorted.arab02.rel.freqs.t[1:10], type="b",
xlab="Top Ten Words", ylab="Percentage of Full Text (arabic)", xaxt ="n")
axis(1,1:10, labels=names(sorted.arab02.rel.freqs.t [1:10]))
plot(sorted.arab02.rel.freqs.t[1:10], type="b",
xlab="Top Ten Words", ylab="Percentage of Full Text (arabic)", xaxt ="n")
axis(1,1:10, labels=names(sorted.arab02.rel.freqs.t [1:10]))
plot(sorted.arab01.rel.freqs.t[1:10], type="b",
xlab="Top Ten Words", ylab="Percentage of Full Text (arab)", xaxt ="n")
axis(1,1:10, labels=names(sorted.arab01.rel.freqs.t [1:10]))
plot(sorted.arab02.rel.freqs.t[1:10], type="b",
xlab="Top Ten Words", ylab="Percentage of Full Text (arabic)", xaxt ="n")
axis(1,1:10, labels=names(sorted.arab02.rel.freqs.t [1:10]))
